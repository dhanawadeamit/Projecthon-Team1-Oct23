

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 02 20:11:40 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.32
    24                           ; Generated 02/02/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F47K40 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _PMD5	set	3814
    59  0000                     _PMD4	set	3813
    60  0000                     _PMD3	set	3812
    61  0000                     _PMD2	set	3811
    62  0000                     _PMD1	set	3810
    63  0000                     _PMD0	set	3809
    64  0000                     _OSCTUNE	set	3805
    65  0000                     _OSCFRQ	set	3806
    66  0000                     _OSCEN	set	3804
    67  0000                     _OSCCON3	set	3802
    68  0000                     _OSCCON1	set	3800
    69  0000                     _INLVLE	set	3882
    70  0000                     _INLVLD	set	3874
    71  0000                     _INLVLC	set	3869
    72  0000                     _INLVLB	set	3861
    73  0000                     _INLVLA	set	3853
    74  0000                     _SLRCONE	set	3883
    75  0000                     _SLRCOND	set	3875
    76  0000                     _SLRCONC	set	3870
    77  0000                     _SLRCONB	set	3862
    78  0000                     _SLRCONA	set	3854
    79  0000                     _ODCOND	set	3876
    80  0000                     _ODCONC	set	3871
    81  0000                     _ODCONB	set	3863
    82  0000                     _ODCONA	set	3855
    83  0000                     _ODCONE	set	3884
    84  0000                     _WPUC	set	3872
    85  0000                     _WPUA	set	3856
    86  0000                     _WPUB	set	3864
    87  0000                     _WPUE	set	3885
    88  0000                     _WPUD	set	3877
    89  0000                     _ANSELA	set	3857
    90  0000                     _ANSELE	set	3886
    91  0000                     _ANSELB	set	3865
    92  0000                     _ANSELC	set	3873
    93  0000                     _ANSELD	set	3878
    94  0000                     _LATEbits	set	3975
    95  0000                     _LATDbits	set	3974
    96  0000                     _TRISD	set	3979
    97  0000                     _TRISC	set	3978
    98  0000                     _TRISB	set	3977
    99  0000                     _TRISA	set	3976
   100  0000                     _TRISE	set	3980
   101  0000                     _LATC	set	3973
   102  0000                     _LATB	set	3972
   103  0000                     _LATA	set	3971
   104  0000                     _LATD	set	3974
   105  0000                     _LATE	set	3975
   106                           
   107                           	psect	smallconst
   108  000F00                     __psmallconst:
   109                           	callstack 0
   110  000F00  00                 	db	0
   111  000F01                     STR_2:
   112                           
   113                           ; BSR set to: 14
   114  000F01  49                 	db	73	;'I'
   115  000F02  72                 	db	114	;'r'
   116  000F03  72                 	db	114	;'r'
   117  000F04  69                 	db	105	;'i'
   118  000F05  67                 	db	103	;'g'
   119  000F06  61                 	db	97	;'a'
   120  000F07  74                 	db	116	;'t'
   121  000F08  69                 	db	105	;'i'
   122  000F09  6F                 	db	111	;'o'
   123  000F0A  6E                 	db	110	;'n'
   124  000F0B  20                 	db	32
   125  000F0C  53                 	db	83	;'S'
   126  000F0D  79                 	db	121	;'y'
   127  000F0E  73                 	db	115	;'s'
   128  000F0F  74                 	db	116	;'t'
   129  000F10  65                 	db	101	;'e'
   130  000F11  6D                 	db	109	;'m'
   131  000F12  20                 	db	32
   132  000F13  50                 	db	80	;'P'
   133  000F14  72                 	db	114	;'r'
   134  000F15  6F                 	db	111	;'o'
   135  000F16  6A                 	db	106	;'j'
   136  000F17  65                 	db	101	;'e'
   137  000F18  63                 	db	99	;'c'
   138  000F19  74                 	db	116	;'t'
   139  000F1A  00                 	db	0
   140  000F1B                     STR_1:
   141                           
   142                           ; BSR set to: 14
   143  000F1B  45                 	db	69	;'E'
   144  000F1C  6D                 	db	109	;'m'
   145  000F1D  62                 	db	98	;'b'
   146  000F1E  65                 	db	101	;'e'
   147  000F1F  64                 	db	100	;'d'
   148  000F20  44                 	db	68	;'D'
   149  000F21  4E                 	db	78	;'N'
   150  000F22  41                 	db	65	;'A'
   151  000F23  00                 	db	0
   152  000F24  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  00117E                     __pcinit:
   158                           	callstack 0
   159  00117E                     start_initialization:
   160                           	callstack 0
   161  00117E                     __initialization:
   162                           	callstack 0
   163  00117E                     end_of_initialization:
   164                           	callstack 0
   165  00117E                     __end_of__initialization:
   166                           	callstack 0
   167  00117E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   168  001180  6EF8               	movwf	tblptru,c
   169  001182  0E0F               	movlw	high __Lsmallconst
   170  001184  6EF7               	movwf	tblptrh,c
   171  001186  0100               	movlb	0
   172  001188  EF82  F008         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	cstackCOMRAM
   175  000001                     __pcstackCOMRAM:
   176                           	callstack 0
   177  000001                     lcd_write@c:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x0
   181  000001                     	ds	1
   182  000002                     ??_lcd_4bit_init:
   183  000002                     lcd_1st_line@pos:
   184                           	callstack 0
   185  000002                     lcd_2nd_line@pos:
   186                           	callstack 0
   187  000002                     lcd_puts@s:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x1
   191  000002                     	ds	2
   192  000004                     
   193                           ; 1 bytes @ 0x3
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 49 in file "Irrigation_System.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels required when called: 3
   219 ;; This function calls:
   220 ;;		_SYSTEM_Initialize
   221 ;;		_lcd_1st_line
   222 ;;		_lcd_2nd_line
   223 ;;		_lcd_4bit_init
   224 ;;		_lcd_puts
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  001104                     __ptext0:
   232                           	callstack 0
   233  001104                     _main:
   234                           	callstack 28
   235  001104                     
   236                           ;Irrigation_System.c: 52:     SYSTEM_Initialize();
   237  001104  ECD4  F008         	call	_SYSTEM_Initialize	;wreg free
   238  001108                     
   239                           ;Irrigation_System.c: 53:     lcd_4bit_init();
   240  001108  EC35  F008         	call	_lcd_4bit_init	;wreg free
   241  00110C                     
   242                           ;Irrigation_System.c: 69:     lcd_1st_line(0);
   243  00110C  0E00               	movlw	0
   244  00110E  ECCD  F008         	call	_lcd_1st_line
   245  001112                     
   246                           ;Irrigation_System.c: 70:     lcd_puts("EmbedDNA");
   247  001112  0E1B               	movlw	low STR_1
   248  001114  6E02               	movwf	lcd_puts@s^0,c
   249  001116  0E0F               	movlw	high STR_1
   250  001118  6E03               	movwf	(lcd_puts@s+1)^0,c
   251  00111A  EC66  F008         	call	_lcd_puts	;wreg free
   252  00111E                     
   253                           ;Irrigation_System.c: 71:     lcd_2nd_line(0);
   254  00111E  0E00               	movlw	0
   255  001120  ECC6  F008         	call	_lcd_2nd_line
   256  001124                     
   257                           ;Irrigation_System.c: 72:     lcd_puts("Irrigation System Project");
   258  001124  0E01               	movlw	low STR_2
   259  001126  6E02               	movwf	lcd_puts@s^0,c
   260  001128  0E0F               	movlw	high STR_2
   261  00112A  6E03               	movwf	(lcd_puts@s+1)^0,c
   262  00112C  EC66  F008         	call	_lcd_puts	;wreg free
   263  001130                     l174:
   264  001130  EF98  F008         	goto	l174
   265  001134  EF00  F000         	goto	start
   266  001138                     __end_of_main:
   267                           	callstack 0
   268                           
   269 ;; *************** function _lcd_puts *****************
   270 ;; Defined at:
   271 ;;		line 80 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;  s               2    1[COMRAM] PTR const unsigned char 
   274 ;;		 -> STR_2(26), STR_1(9), 
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;Total ram usage:        2 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; Hardware stack levels required when called: 1
   293 ;; This function calls:
   294 ;;		_lcd_write
   295 ;; This function is called by:
   296 ;;		_main
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text1
   301  0010CC                     __ptext1:
   302                           	callstack 0
   303  0010CC                     _lcd_puts:
   304                           	callstack 29
   305  0010CC                     
   306                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 80: void lcd_puts(const char * s);PICsim_Ma
      +                          nual_Add_Files/LCD/src/LCD_4Bit.c: 81: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 82:
      +                            LATEbits.LE2 = 1;
   307  0010CC  8487               	bsf	135,2,c	;volatile
   308                           
   309                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 83:  while(*s)
   310  0010CE  EF73  F008         	goto	l999
   311  0010D2                     l995:
   312                           
   313                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 84:   lcd_write(*s++);
   314  0010D2  C002  FFF6         	movff	lcd_puts@s,tblptrl
   315  0010D6  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
   316  0010DA                     	if	0	;tblptru may be non-zero
   317  0010DA                     	endif
   318  0010DA                     	if	0	;tblptru may be non-zero
   319  0010DA                     	endif
   320  0010DA  0008               	tblrd		*
   321  0010DC  50F5               	movf	tablat,w,c
   322  0010DE  EC93  F007         	call	_lcd_write
   323  0010E2  4A02               	infsnz	lcd_puts@s^0,f,c
   324  0010E4  2A03               	incf	(lcd_puts@s+1)^0,f,c
   325  0010E6                     l999:
   326                           
   327                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 83:  while(*s)
   328  0010E6  C002  FFF6         	movff	lcd_puts@s,tblptrl
   329  0010EA  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
   330  0010EE                     	if	0	;tblptru may be non-zero
   331  0010EE                     	endif
   332  0010EE                     	if	0	;tblptru may be non-zero
   333  0010EE                     	endif
   334  0010EE  0008               	tblrd		*
   335  0010F0  50F5               	movf	tablat,w,c
   336  0010F2  0900               	iorlw	0
   337  0010F4  A4D8               	btfss	status,2,c
   338  0010F6  EF7F  F008         	goto	u101
   339  0010FA  EF81  F008         	goto	u100
   340  0010FE                     u101:
   341  0010FE  EF69  F008         	goto	l995
   342  001102                     u100:
   343  001102  0012               	return		;funcret
   344  001104                     __end_of_lcd_puts:
   345                           	callstack 0
   346                           
   347 ;; *************** function _lcd_4bit_init *****************
   348 ;; Defined at:
   349 ;;		line 129 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   367 ;;Total ram usage:        1 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; Hardware stack levels required when called: 2
   370 ;; This function calls:
   371 ;;		_lcd_clear
   372 ;;		_lcd_write
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  00106A                     __ptext2:
   380                           	callstack 0
   381  00106A                     _lcd_4bit_init:
   382                           	callstack 28
   383  00106A                     
   384                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 131:  LATEbits.LE2 = 0;
   385  00106A  9487               	bcf	135,2,c	;volatile
   386                           
   387                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 132:  LATEbits.LE1 = 0;
   388  00106C  9287               	bcf	135,1,c	;volatile
   389  00106E                     
   390                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 135:     _delay((unsigned long)((15)*(10000
      +                          00/4000.0)));
   391  00106E  0E05               	movlw	5
   392  001070  6E02               	movwf	??_lcd_4bit_init^0,c
   393  001072  0EDE               	movlw	222
   394  001074                     u117:
   395  001074  2EE8               	decfsz	wreg,f,c
   396  001076  D7FE               	bra	u117
   397  001078  2E02               	decfsz	??_lcd_4bit_init^0,f,c
   398  00107A  D7FC               	bra	u117
   399  00107C                     
   400                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 136:  LATDbits.LD4 = 1;
   401  00107C  8886               	bsf	134,4,c	;volatile
   402  00107E                     
   403                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 137:  LATDbits.LD5 = 1;
   404  00107E  8A86               	bsf	134,5,c	;volatile
   405  001080                     
   406                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 138:  LATDbits.LD6 = 0;
   407  001080  9C86               	bcf	134,6,c	;volatile
   408  001082                     
   409                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 139:  LATDbits.LD7 = 0;
   410  001082  9E86               	bcf	134,7,c	;volatile
   411  001084                     
   412                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 141:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   413  001084  8287               	bsf	135,1,c	;volatile
   414  001086  9287               	bcf	135,1,c	;volatile
   415                           
   416                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 142:  _delay((unsigned long)((5)*(1000000/4
      +                          000.0)));
   417  001088  0EFA               	movlw	250
   418  00108A                     u127:
   419  00108A  D000               	nop2	
   420  00108C  2EE8               	decfsz	wreg,f,c
   421  00108E  D7FD               	bra	u127
   422  001090                     
   423                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 143:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   424  001090  8287               	bsf	135,1,c	;volatile
   425  001092  9287               	bcf	135,1,c	;volatile
   426                           
   427                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 144:  _delay((unsigned long)((200)*(1000000
      +                          /4000000.0)));
   428  001094  0E10               	movlw	16
   429  001096                     u137:
   430  001096  2EE8               	decfsz	wreg,f,c
   431  001098  D7FE               	bra	u137
   432  00109A  D000               	nop2	
   433  00109C                     
   434                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 145:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   435  00109C  8287               	bsf	135,1,c	;volatile
   436  00109E  9287               	bcf	135,1,c	;volatile
   437                           
   438                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 146:  _delay((unsigned long)((200)*(1000000
      +                          /4000000.0)));
   439  0010A0  0E10               	movlw	16
   440  0010A2                     u147:
   441  0010A2  2EE8               	decfsz	wreg,f,c
   442  0010A4  D7FE               	bra	u147
   443  0010A6  D000               	nop2	
   444  0010A8                     
   445                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 148:  LATDbits.LD4 = 0;
   446  0010A8  9886               	bcf	134,4,c	;volatile
   447  0010AA                     
   448                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 149:  LATDbits.LD5 = 1;
   449  0010AA  8A86               	bsf	134,5,c	;volatile
   450  0010AC                     
   451                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 150:  LATDbits.LD6 = 0;
   452  0010AC  9C86               	bcf	134,6,c	;volatile
   453  0010AE                     
   454                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 151:  LATDbits.LD7 = 0;
   455  0010AE  9E86               	bcf	134,7,c	;volatile
   456  0010B0                     
   457                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 152:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   458  0010B0  8287               	bsf	135,1,c	;volatile
   459  0010B2  9287               	bcf	135,1,c	;volatile
   460  0010B4                     
   461                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 154:  lcd_write(0x28);
   462  0010B4  0E28               	movlw	40
   463  0010B6  EC93  F007         	call	_lcd_write
   464  0010BA                     
   465                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 155:  lcd_write(0x0E);
   466  0010BA  0E0E               	movlw	14
   467  0010BC  EC93  F007         	call	_lcd_write
   468  0010C0                     
   469                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 156:  lcd_clear();
   470  0010C0  ECB6  F008         	call	_lcd_clear	;wreg free
   471  0010C4                     
   472                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 157:  lcd_write(0x06);
   473  0010C4  0E06               	movlw	6
   474  0010C6  EC93  F007         	call	_lcd_write
   475  0010CA  0012               	return		;funcret
   476  0010CC                     __end_of_lcd_4bit_init:
   477                           	callstack 0
   478                           
   479 ;; *************** function _lcd_clear *****************
   480 ;; Defined at:
   481 ;;		line 70 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 1
   502 ;; This function calls:
   503 ;;		_lcd_write
   504 ;; This function is called by:
   505 ;;		_lcd_4bit_init
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text3
   510  00116C                     __ptext3:
   511                           	callstack 0
   512  00116C                     _lcd_clear:
   513                           	callstack 28
   514  00116C                     
   515                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 72:  LATEbits.LE2 = 0;
   516  00116C  9487               	bcf	135,2,c	;volatile
   517  00116E                     
   518                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 73:  lcd_write(0x1);
   519  00116E  0E01               	movlw	1
   520  001170  EC93  F007         	call	_lcd_write
   521  001174                     
   522                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 74:  _delay((unsigned long)((2)*(1000000/40
      +                          00.0)));
   523  001174  0EA6               	movlw	166
   524  001176                     u157:
   525  001176  2EE8               	decfsz	wreg,f,c
   526  001178  D7FE               	bra	u157
   527  00117A  D000               	nop2	
   528  00117C  0012               	return		;funcret
   529  00117E                     __end_of_lcd_clear:
   530                           	callstack 0
   531                           
   532 ;; *************** function _lcd_2nd_line *****************
   533 ;; Defined at:
   534 ;;		line 102 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  pos             1    wreg     unsigned char 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  pos             1    1[COMRAM] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		_lcd_write
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text4
   563  00118C                     __ptext4:
   564                           	callstack 0
   565  00118C                     _lcd_2nd_line:
   566                           	callstack 29
   567                           
   568                           ;incstack = 0
   569                           ;lcd_2nd_line@pos stored from wreg
   570  00118C  6E02               	movwf	lcd_2nd_line@pos^0,c
   571  00118E                     
   572                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 102: void lcd_2nd_line(unsigned char pos);P
      +                          ICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 103: {;PICsim_Manual_Add_Files/LCD/src/LCD_4B
      +                          it.c: 104:  LATEbits.LE2 = 0;
   573  00118E  9487               	bcf	135,2,c	;volatile
   574  001190                     
   575                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 108:  lcd_write(0xC0+pos);
   576  001190  5002               	movf	lcd_2nd_line@pos^0,w,c
   577  001192  0FC0               	addlw	192
   578  001194  EC93  F007         	call	_lcd_write
   579  001198  0012               	return		;funcret
   580  00119A                     __end_of_lcd_2nd_line:
   581                           	callstack 0
   582                           
   583 ;; *************** function _lcd_1st_line *****************
   584 ;; Defined at:
   585 ;;		line 92 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  pos             1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  pos             1    1[COMRAM] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;Total ram usage:        1 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 1
   606 ;; This function calls:
   607 ;;		_lcd_write
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text5
   614  00119A                     __ptext5:
   615                           	callstack 0
   616  00119A                     _lcd_1st_line:
   617                           	callstack 29
   618                           
   619                           ;incstack = 0
   620                           ;lcd_1st_line@pos stored from wreg
   621  00119A  6E02               	movwf	lcd_1st_line@pos^0,c
   622  00119C                     
   623                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 92: void lcd_1st_line(unsigned char pos);PI
      +                          Csim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 93: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit
      +                          .c: 94:  LATEbits.LE2 = 0;
   624  00119C  9487               	bcf	135,2,c	;volatile
   625  00119E                     
   626                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 98:  lcd_write(0x80+pos);
   627  00119E  5002               	movf	lcd_1st_line@pos^0,w,c
   628  0011A0  0F80               	addlw	128
   629  0011A2  EC93  F007         	call	_lcd_write
   630  0011A6  0012               	return		;funcret
   631  0011A8                     __end_of_lcd_1st_line:
   632                           	callstack 0
   633                           
   634 ;; *************** function _lcd_write *****************
   635 ;; Defined at:
   636 ;;		line 10 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  c               1    wreg     unsigned char 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  c               1    0[COMRAM] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_lcd_clear
   660 ;;		_lcd_puts
   661 ;;		_lcd_1st_line
   662 ;;		_lcd_2nd_line
   663 ;;		_lcd_4bit_init
   664 ;;		_lcd_putch
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text6
   669  000F26                     __ptext6:
   670                           	callstack 0
   671  000F26                     _lcd_write:
   672                           	callstack 29
   673                           
   674                           ;incstack = 0
   675                           ;lcd_write@c stored from wreg
   676  000F26  6E01               	movwf	lcd_write@c^0,c
   677  000F28                     
   678                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 10: void lcd_write(unsigned char c);PICsim_
      +                          Manual_Add_Files/LCD/src/LCD_4Bit.c: 11: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 1
      +                          2:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   679  000F28  0E03               	movlw	3
   680  000F2A                     u167:
   681  000F2A  2EE8               	decfsz	wreg,f,c
   682  000F2C  D7FE               	bra	u167
   683  000F2E  F000               	nop	
   684  000F30                     
   685                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 13:  if(c & 0x10)
   686  000F30  A801               	btfss	lcd_write@c^0,4,c
   687  000F32  EF9D  F007         	goto	u11
   688  000F36  EF9F  F007         	goto	u10
   689  000F3A                     u11:
   690  000F3A  EFA2  F007         	goto	l122
   691  000F3E                     u10:
   692  000F3E                     
   693                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 14:         LATDbits.LD4 = 1;
   694  000F3E  8886               	bsf	134,4,c	;volatile
   695  000F40  EFA3  F007         	goto	l859
   696  000F44                     l122:
   697                           
   698                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 16:         LATDbits.LD4 = 0;
   699  000F44  9886               	bcf	134,4,c	;volatile
   700  000F46                     l859:
   701                           
   702                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 18:  if(c & 0x20)
   703  000F46  AA01               	btfss	lcd_write@c^0,5,c
   704  000F48  EFA8  F007         	goto	u21
   705  000F4C  EFAA  F007         	goto	u20
   706  000F50                     u21:
   707  000F50  EFAD  F007         	goto	l124
   708  000F54                     u20:
   709  000F54                     
   710                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 19:         LATDbits.LD5 = 1;
   711  000F54  8A86               	bsf	134,5,c	;volatile
   712  000F56  EFAE  F007         	goto	l863
   713  000F5A                     l124:
   714                           
   715                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 21:         LATDbits.LD5 = 0;
   716  000F5A  9A86               	bcf	134,5,c	;volatile
   717  000F5C                     l863:
   718                           
   719                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 23:  if(c & 0x40)
   720  000F5C  AC01               	btfss	lcd_write@c^0,6,c
   721  000F5E  EFB3  F007         	goto	u31
   722  000F62  EFB5  F007         	goto	u30
   723  000F66                     u31:
   724  000F66  EFB8  F007         	goto	l126
   725  000F6A                     u30:
   726  000F6A                     
   727                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 24:         LATDbits.LD6 = 1;
   728  000F6A  8C86               	bsf	134,6,c	;volatile
   729  000F6C  EFB9  F007         	goto	l867
   730  000F70                     l126:
   731                           
   732                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 26:         LATDbits.LD6 = 0;
   733  000F70  9C86               	bcf	134,6,c	;volatile
   734  000F72                     l867:
   735                           
   736                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 28:  if(c & 0x80)
   737  000F72  AE01               	btfss	lcd_write@c^0,7,c
   738  000F74  EFBE  F007         	goto	u41
   739  000F78  EFC0  F007         	goto	u40
   740  000F7C                     u41:
   741  000F7C  EFC3  F007         	goto	l128
   742  000F80                     u40:
   743  000F80                     
   744                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 29:         LATDbits.LD7 = 1;
   745  000F80  8E86               	bsf	134,7,c	;volatile
   746  000F82  EFC4  F007         	goto	l129
   747  000F86                     l128:
   748                           
   749                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 31:         LATDbits.LD7 = 0;
   750  000F86  9E86               	bcf	134,7,c	;volatile
   751  000F88                     l129:
   752                           
   753                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 34:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0));
   754  000F88  8287               	bsf	135,1,c	;volatile
   755  000F8A  9287               	bcf	135,1,c	;volatile
   756  000F8C                     
   757                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 36:  if(c & 0x01)
   758  000F8C  A001               	btfss	lcd_write@c^0,0,c
   759  000F8E  EFCB  F007         	goto	u51
   760  000F92  EFCD  F007         	goto	u50
   761  000F96                     u51:
   762  000F96  EFD0  F007         	goto	l130
   763  000F9A                     u50:
   764  000F9A                     
   765                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 37:         LATDbits.LD4 = 1;
   766  000F9A  8886               	bsf	134,4,c	;volatile
   767  000F9C  EFD1  F007         	goto	l875
   768  000FA0                     l130:
   769                           
   770                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 39:         LATDbits.LD4 = 0;
   771  000FA0  9886               	bcf	134,4,c	;volatile
   772  000FA2                     l875:
   773                           
   774                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 41:  if(c & 0x02)
   775  000FA2  A201               	btfss	lcd_write@c^0,1,c
   776  000FA4  EFD6  F007         	goto	u61
   777  000FA8  EFD8  F007         	goto	u60
   778  000FAC                     u61:
   779  000FAC  EFDB  F007         	goto	l132
   780  000FB0                     u60:
   781  000FB0                     
   782                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 42:         LATDbits.LD5 = 1;
   783  000FB0  8A86               	bsf	134,5,c	;volatile
   784  000FB2  EFDC  F007         	goto	l879
   785  000FB6                     l132:
   786                           
   787                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 44:         LATDbits.LD5 = 0;
   788  000FB6  9A86               	bcf	134,5,c	;volatile
   789  000FB8                     l879:
   790                           
   791                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 46:  if(c & 0x04)
   792  000FB8  A401               	btfss	lcd_write@c^0,2,c
   793  000FBA  EFE1  F007         	goto	u71
   794  000FBE  EFE3  F007         	goto	u70
   795  000FC2                     u71:
   796  000FC2  EFE6  F007         	goto	l134
   797  000FC6                     u70:
   798  000FC6                     
   799                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 47:         LATDbits.LD6 = 1;
   800  000FC6  8C86               	bsf	134,6,c	;volatile
   801  000FC8  EFE7  F007         	goto	l883
   802  000FCC                     l134:
   803                           
   804                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 49:         LATDbits.LD6 = 0;
   805  000FCC  9C86               	bcf	134,6,c	;volatile
   806  000FCE                     l883:
   807                           
   808                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 51:  if(c & 0x08)
   809  000FCE  A601               	btfss	lcd_write@c^0,3,c
   810  000FD0  EFEC  F007         	goto	u81
   811  000FD4  EFEE  F007         	goto	u80
   812  000FD8                     u81:
   813  000FD8  EFF1  F007         	goto	l136
   814  000FDC                     u80:
   815  000FDC                     
   816                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 52:         LATDbits.LD7 = 1;
   817  000FDC  8E86               	bsf	134,7,c	;volatile
   818  000FDE  EFF2  F007         	goto	l137
   819  000FE2                     l136:
   820                           
   821                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 54:         LATDbits.LD7 = 0;
   822  000FE2  9E86               	bcf	134,7,c	;volatile
   823  000FE4                     l137:
   824                           
   825                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 57:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0));
   826  000FE4  8287               	bsf	135,1,c	;volatile
   827  000FE6  9287               	bcf	135,1,c	;volatile
   828  000FE8  0012               	return		;funcret
   829  000FEA                     __end_of_lcd_write:
   830                           	callstack 0
   831                           
   832 ;; *************** function _SYSTEM_Initialize *****************
   833 ;; Defined at:
   834 ;;		line 50 in file "mcc_generated_files/mcc.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 1
   855 ;; This function calls:
   856 ;;		_OSCILLATOR_Initialize
   857 ;;		_PIN_MANAGER_Initialize
   858 ;;		_PMD_Initialize
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text7
   865  0011A8                     __ptext7:
   866                           	callstack 0
   867  0011A8                     _SYSTEM_Initialize:
   868                           	callstack 29
   869  0011A8                     
   870                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   871  0011A8  EC9C  F008         	call	_PMD_Initialize	;wreg free
   872                           
   873                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   874  0011AC  ECF5  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   875                           
   876                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   877  0011B0  ECAA  F008         	call	_OSCILLATOR_Initialize	;wreg free
   878  0011B4  0012               	return		;funcret
   879  0011B6                     __end_of_SYSTEM_Initialize:
   880                           	callstack 0
   881                           
   882 ;; *************** function _PMD_Initialize *****************
   883 ;; Defined at:
   884 ;;		line 71 in file "mcc_generated_files/mcc.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_SYSTEM_Initialize
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text8
   912  001138                     __ptext8:
   913                           	callstack 0
   914  001138                     _PMD_Initialize:
   915                           	callstack 29
   916  001138                     
   917                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
   918  001138  0E00               	movlw	0
   919  00113A  010E               	movlb	14	; () banked
   920  00113C  6FE1               	movwf	225,b	;volatile
   921                           
   922                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
   923  00113E  0E00               	movlw	0
   924  001140  6FE2               	movwf	226,b	;volatile
   925                           
   926                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
   927  001142  0E00               	movlw	0
   928  001144  6FE3               	movwf	227,b	;volatile
   929                           
   930                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
   931  001146  0E00               	movlw	0
   932  001148  6FE4               	movwf	228,b	;volatile
   933                           
   934                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
   935  00114A  0E00               	movlw	0
   936  00114C  6FE5               	movwf	229,b	;volatile
   937                           
   938                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
   939  00114E  0E00               	movlw	0
   940  001150  6FE6               	movwf	230,b	;volatile
   941  001152                     
   942                           ; BSR set to: 14
   943  001152  0012               	return		;funcret
   944  001154                     __end_of_PMD_Initialize:
   945                           	callstack 0
   946                           
   947 ;; *************** function _PIN_MANAGER_Initialize *****************
   948 ;; Defined at:
   949 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_SYSTEM_Initialize
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text9
   977  000FEA                     __ptext9:
   978                           	callstack 0
   979  000FEA                     _PIN_MANAGER_Initialize:
   980                           	callstack 29
   981  000FEA                     
   982                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   983  000FEA  0E00               	movlw	0
   984  000FEC  6E87               	movwf	135,c	;volatile
   985                           
   986                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   987  000FEE  0E00               	movlw	0
   988  000FF0  6E86               	movwf	134,c	;volatile
   989                           
   990                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   991  000FF2  0E00               	movlw	0
   992  000FF4  6E83               	movwf	131,c	;volatile
   993                           
   994                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   995  000FF6  0E00               	movlw	0
   996  000FF8  6E84               	movwf	132,c	;volatile
   997                           
   998                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   999  000FFA  0E00               	movlw	0
  1000  000FFC  6E85               	movwf	133,c	;volatile
  1001                           
  1002                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
  1003  000FFE  0E00               	movlw	0
  1004  001000  6E8C               	movwf	140,c	;volatile
  1005                           
  1006                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  1007  001002  0E00               	movlw	0
  1008  001004  6E88               	movwf	136,c	;volatile
  1009                           
  1010                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  1011  001006  0E00               	movlw	0
  1012  001008  6E89               	movwf	137,c	;volatile
  1013                           
  1014                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x00;
  1015  00100A  0E00               	movlw	0
  1016  00100C  6E8A               	movwf	138,c	;volatile
  1017                           
  1018                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  1019  00100E  0E00               	movlw	0
  1020  001010  6E8B               	movwf	139,c	;volatile
  1021                           
  1022                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1023  001012  0E00               	movlw	0
  1024  001014  010F               	movlb	15	; () banked
  1025  001016  6F26               	movwf	38,b	;volatile
  1026                           
  1027                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  1028  001018  0E00               	movlw	0
  1029  00101A  6F21               	movwf	33,b	;volatile
  1030                           
  1031                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  1032  00101C  0E00               	movlw	0
  1033  00101E  6F19               	movwf	25,b	;volatile
  1034                           
  1035                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
  1036  001020  0E00               	movlw	0
  1037  001022  6F2E               	movwf	46,b	;volatile
  1038                           
  1039                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  1040  001024  0E00               	movlw	0
  1041  001026  6F11               	movwf	17,b	;volatile
  1042                           
  1043                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1044  001028  0E00               	movlw	0
  1045  00102A  6F25               	movwf	37,b	;volatile
  1046                           
  1047                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1048  00102C  0E00               	movlw	0
  1049  00102E  6F2D               	movwf	45,b	;volatile
  1050                           
  1051                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1052  001030  0E00               	movlw	0
  1053  001032  6F18               	movwf	24,b	;volatile
  1054                           
  1055                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1056  001034  0E00               	movlw	0
  1057  001036  6F10               	movwf	16,b	;volatile
  1058                           
  1059                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1060  001038  0E00               	movlw	0
  1061  00103A  6F20               	movwf	32,b	;volatile
  1062                           
  1063                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1064  00103C  0E00               	movlw	0
  1065  00103E  6F2C               	movwf	44,b	;volatile
  1066                           
  1067                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1068  001040  0E00               	movlw	0
  1069  001042  6F0F               	movwf	15,b	;volatile
  1070                           
  1071                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1072  001044  0E00               	movlw	0
  1073  001046  6F17               	movwf	23,b	;volatile
  1074                           
  1075                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1076  001048  0E00               	movlw	0
  1077  00104A  6F1F               	movwf	31,b	;volatile
  1078                           
  1079                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1080  00104C  0E00               	movlw	0
  1081  00104E  6F24               	movwf	36,b	;volatile
  1082  001050                     
  1083                           ; BSR set to: 15
  1084                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1085  001050  690E               	setf	14,b	;volatile
  1086  001052                     
  1087                           ; BSR set to: 15
  1088                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1089  001052  6916               	setf	22,b	;volatile
  1090  001054                     
  1091                           ; BSR set to: 15
  1092                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1093  001054  691E               	setf	30,b	;volatile
  1094  001056                     
  1095                           ; BSR set to: 15
  1096                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1097  001056  6923               	setf	35,b	;volatile
  1098                           
  1099                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1100  001058  0E07               	movlw	7
  1101  00105A  6F2B               	movwf	43,b	;volatile
  1102  00105C                     
  1103                           ; BSR set to: 15
  1104                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1105  00105C  690D               	setf	13,b	;volatile
  1106  00105E                     
  1107                           ; BSR set to: 15
  1108                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1109  00105E  6915               	setf	21,b	;volatile
  1110  001060                     
  1111                           ; BSR set to: 15
  1112                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1113  001060  691D               	setf	29,b	;volatile
  1114  001062                     
  1115                           ; BSR set to: 15
  1116                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1117  001062  6922               	setf	34,b	;volatile
  1118                           
  1119                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1120  001064  0E0F               	movlw	15
  1121  001066  6F2A               	movwf	42,b	;volatile
  1122  001068                     
  1123                           ; BSR set to: 15
  1124  001068  0012               	return		;funcret
  1125  00106A                     __end_of_PIN_MANAGER_Initialize:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _OSCILLATOR_Initialize *****************
  1129 ;; Defined at:
  1130 ;;		line 57 in file "mcc_generated_files/mcc.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_SYSTEM_Initialize
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text10
  1158  001154                     __ptext10:
  1159                           	callstack 0
  1160  001154                     _OSCILLATOR_Initialize:
  1161                           	callstack 29
  1162  001154                     
  1163                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x60;
  1164  001154  0E60               	movlw	96
  1165  001156  010E               	movlb	14	; () banked
  1166  001158  6FD8               	movwf	216,b	;volatile
  1167                           
  1168                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  1169  00115A  0E00               	movlw	0
  1170  00115C  6FDA               	movwf	218,b	;volatile
  1171                           
  1172                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  1173  00115E  0E00               	movlw	0
  1174  001160  6FDC               	movwf	220,b	;volatile
  1175                           
  1176                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x00;
  1177  001162  0E00               	movlw	0
  1178  001164  6FDE               	movwf	222,b	;volatile
  1179                           
  1180                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1181  001166  0E00               	movlw	0
  1182  001168  6FDD               	movwf	221,b	;volatile
  1183  00116A                     
  1184                           ; BSR set to: 14
  1185  00116A  0012               	return		;funcret
  1186  00116C                     __end_of_OSCILLATOR_Initialize:
  1187                           	callstack 0
  1188                           
  1189                           	psect	rparam
  1190  0000                     
  1191                           	psect	config
  1192                           
  1193                           ;Config register CONFIG1L @ 0x300000
  1194                           ;	External Oscillator mode Selection bits
  1195                           ;	FEXTOSC = OFF, Oscillator not enabled
  1196                           ;	Power-up default value for COSC bits
  1197                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1198  300000                     	org	3145728
  1199  300000  EC                 	db	236
  1200                           
  1201                           ;Config register CONFIG1H @ 0x300001
  1202                           ;	Clock Out Enable bit
  1203                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1204                           ;	Clock Switch Enable bit
  1205                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1206                           ;	Fail-Safe Clock Monitor Enable bit
  1207                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1208  300001                     	org	3145729
  1209  300001  FF                 	db	255
  1210                           
  1211                           ;Config register CONFIG2L @ 0x300002
  1212                           ;	Master Clear Enable bit
  1213                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1214                           ;	Power-up Timer Enable bit
  1215                           ;	PWRTE = OFF, Power up timer disabled
  1216                           ;	Low-power BOR enable bit
  1217                           ;	LPBOREN = OFF, ULPBOR disabled
  1218                           ;	Brown-out Reset Enable bits
  1219                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1220  300002                     	org	3145730
  1221  300002  FF                 	db	255
  1222                           
  1223                           ;Config register CONFIG2H @ 0x300003
  1224                           ;	Brown Out Reset Voltage selection bits
  1225                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1226                           ;	ZCD Disable bit
  1227                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1228                           ;	PPSLOCK bit One-Way Set Enable bit
  1229                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1230                           ;	Stack Full/Underflow Reset Enable bit
  1231                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1232                           ;	Debugger Enable bit
  1233                           ;	DEBUG = OFF, Background debugger disabled
  1234                           ;	Extended Instruction Set Enable bit
  1235                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1236  300003                     	org	3145731
  1237  300003  FF                 	db	255
  1238                           
  1239                           ;Config register CONFIG3L @ 0x300004
  1240                           ;	WDT Period Select bits
  1241                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1242                           ;	WDT operating mode
  1243                           ;	WDTE = OFF, WDT Disabled
  1244  300004                     	org	3145732
  1245  300004  9F                 	db	159
  1246                           
  1247                           ;Config register CONFIG3H @ 0x300005
  1248                           ;	WDT Window Select bits
  1249                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1250                           ;	WDT input clock selector
  1251                           ;	WDTCCS = SC, Software Control
  1252  300005                     	org	3145733
  1253  300005  FF                 	db	255
  1254                           
  1255                           ;Config register CONFIG4L @ 0x300006
  1256                           ;	Write Protection Block 0
  1257                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1258                           ;	Write Protection Block 1
  1259                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1260                           ;	Write Protection Block 2
  1261                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1262                           ;	Write Protection Block 3
  1263                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1264                           ;	Write Protection Block 3
  1265                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1266                           ;	Write Protection Block 3
  1267                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1268                           ;	Write Protection Block 3
  1269                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  1270                           ;	Write Protection Block 3
  1271                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1272  300006                     	org	3145734
  1273  300006  FF                 	db	255
  1274                           
  1275                           ;Config register CONFIG4H @ 0x300007
  1276                           ;	Configuration Register Write Protection bit
  1277                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  1278                           ;	Boot Block Write Protection bit
  1279                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1280                           ;	Data EEPROM Write Protection bit
  1281                           ;	WRTD = OFF, Data EEPROM not write-protected
  1282                           ;	Scanner Enable bit
  1283                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1284                           ;	Low Voltage Programming Enable bit
  1285                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1286  300007                     	org	3145735
  1287  300007  FF                 	db	255
  1288                           
  1289                           ;Config register CONFIG5L @ 0x300008
  1290                           ;	UserNVM Program Memory Code Protection bit
  1291                           ;	CP = OFF, UserNVM code protection disabled
  1292                           ;	DataNVM Memory Code Protection bit
  1293                           ;	CPD = OFF, DataNVM code protection disabled
  1294  300008                     	org	3145736
  1295  300008  FF                 	db	255
  1296                           
  1297                           ;Config register CONFIG5H @ 0x300009
  1298                           ;	unspecified, using default values
  1299  300009                     	org	3145737
  1300  300009  FF                 	db	255
  1301                           
  1302                           ;Config register CONFIG6L @ 0x30000A
  1303                           ;	Table Read Protection Block 0
  1304                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1305                           ;	Table Read Protection Block 1
  1306                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1307                           ;	Table Read Protection Block 2
  1308                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1309                           ;	Table Read Protection Block 3
  1310                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1311                           ;	Table Read Protection Block 4
  1312                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1313                           ;	Table Read Protection Block 5
  1314                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1315                           ;	Table Read Protection Block 6
  1316                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1317                           ;	Table Read Protection Block 7
  1318                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1319  30000A                     	org	3145738
  1320  30000A  FF                 	db	255
  1321                           
  1322                           ;Config register CONFIG6H @ 0x30000B
  1323                           ;	Boot Block Table Read Protection bit
  1324                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1325  30000B                     	org	3145739
  1326  30000B  FF                 	db	255
  1327                           tosu	equ	0xFFF
  1328                           tosh	equ	0xFFE
  1329                           tosl	equ	0xFFD
  1330                           stkptr	equ	0xFFC
  1331                           pclatu	equ	0xFFB
  1332                           pclath	equ	0xFFA
  1333                           pcl	equ	0xFF9
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           prodh	equ	0xFF4
  1339                           prodl	equ	0xFF3
  1340                           indf0	equ	0xFEF
  1341                           postinc0	equ	0xFEE
  1342                           postdec0	equ	0xFED
  1343                           preinc0	equ	0xFEC
  1344                           plusw0	equ	0xFEB
  1345                           fsr0h	equ	0xFEA
  1346                           fsr0l	equ	0xFE9
  1347                           wreg	equ	0xFE8
  1348                           indf1	equ	0xFE7
  1349                           postinc1	equ	0xFE6
  1350                           postdec1	equ	0xFE5
  1351                           preinc1	equ	0xFE4
  1352                           plusw1	equ	0xFE3
  1353                           fsr1h	equ	0xFE2
  1354                           fsr1l	equ	0xFE1
  1355                           bsr	equ	0xFE0
  1356                           indf2	equ	0xFDF
  1357                           postinc2	equ	0xFDE
  1358                           postdec2	equ	0xFDD
  1359                           preinc2	equ	0xFDC
  1360                           plusw2	equ	0xFDB
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_4bit_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_2nd_line->_lcd_write
    _lcd_1st_line->_lcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     827
                  _SYSTEM_Initialize
                       _lcd_1st_line
                       _lcd_2nd_line
                      _lcd_4bit_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     317
                                              1 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_init                                        1     1      0     240
                                              1 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     120
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_2nd_line                                         1     1      0     135
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_1st_line                                         1     1      0     135
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _lcd_1st_line
     _lcd_write
   _lcd_2nd_line
     _lcd_write
   _lcd_4bit_init
     _lcd_clear
       _lcd_write
     _lcd_write
   _lcd_puts
     _lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BIGRAM             E87      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 02 20:11:40 2023

                             l31 11B4                               l34 116A  
                             l37 1152                               u10 0F3E  
                             u11 0F3A                               u20 0F54  
                             u21 0F50                               u30 0F6A  
                             u31 0F66                               u40 0F80  
                             u41 0F7C                               u50 0F9A  
                             u51 0F96                               u60 0FB0  
                             u61 0FAC                               u70 0FC6  
                             u71 0FC2                               u80 0FDC  
                             u81 0FD8                              l110 1068  
                            l130 0FA0                              l122 0F44  
                            l132 0FB6                              l124 0F5A  
                            l134 0FCC                              l126 0F70  
                            l150 1102                              l136 0FE2  
                            l128 0F86                              l144 117C  
                            l137 0FE4                              l129 0F88  
                            l153 11A6                              l138 0FE8  
                            l156 1198                              l174 1130  
                            l159 10CA                              l175 1130  
                            l901 105E                              l903 1060  
                            l911 116E                              l905 1062  
                            l913 1174                              l907 1154  
                            l915 11A8                              l931 1190  
                            l861 0F54                              l853 0F28  
                            l925 119C                              l909 116C  
                            l941 1080                              l933 106A  
                            l871 0F8C                              l863 0F5C  
                            l855 0F30                              l927 119E  
                            l951 1092                              l943 1082  
                            l935 106E                              l881 0FC6  
                            l873 0F9A                              l865 0F6A  
                            l857 0F3E                              l929 118E  
                            l961 10AC                              l953 109C  
                            l945 1084                              l937 107C  
                            l891 1050                              l883 0FCE  
                            l875 0FA2                              l867 0F72  
                            l859 0F46                              l971 10BA  
                            l963 10AE                              l955 109E  
                            l947 1086                              l939 107E  
                            l893 1052                              l885 0FDC  
                            l877 0FB0                              l869 0F80  
                            l973 10C0                              l965 10B0  
                            l957 10A8                              l949 1090  
                            l895 1054                              l887 1138  
                            l879 0FB8                              l975 10C4  
                            l967 10B2                              l959 10AA  
                            l897 1056                              l889 0FEA  
                            l969 10B4                              l993 10CC  
                            l899 105C                              l995 10D2  
                            l997 10E2                              l999 10E6  
                            u100 1102                              u101 10FE  
                            u117 1074                              u127 108A  
                            u137 1096                              u147 10A2  
                            u157 1176                              u167 0F2A  
        __size_of_PMD_Initialize 001C                              wreg 000FE8  
                           l1001 1104                             l1011 1124  
                           l1003 1108                             l1005 110C  
                           l1007 1112                             l1009 111E  
                           STR_1 0F1B                             STR_2 0F01  
                           _LATA 000F83                             _LATB 000F84  
                           _LATC 000F85                             _LATD 000F86  
                           _LATE 000F87                             _PMD0 000EE1  
                           _PMD1 000EE2                             _PMD2 000EE3  
                           _PMD3 000EE4                             _PMD4 000EE5  
                           _PMD5 000EE6                             _WPUA 000F10  
                           _WPUB 000F18                             _WPUC 000F20  
                           _WPUD 000F25                             _WPUE 000F2D  
                           _main 1104                             start 0000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 0018  
  __end_of_OSCILLATOR_Initialize 116C                            ?_main 0001  
                          _OSCEN 000EDC                            _TRISA 000F88  
                          _TRISB 000F89                            _TRISC 000F8A  
                          _TRISD 000F8B                            _TRISE 000F8C  
           __end_of_lcd_2nd_line 119A                            tablat 000FF5  
           __end_of_lcd_1st_line 11A8                            status 000FD8  
                __initialization 117E                     __end_of_main 1138  
                         ??_main 0004                    __activetblptr 000001  
                         _ANSELA 000F11                           _ANSELB 000F19  
                         _ANSELC 000F21                           _ANSELD 000F26  
                         _ANSELE 000F2E                           _ODCONA 000F0F  
                         _ODCONB 000F17                           _ODCONC 000F1F  
                         _ODCOND 000F24                           _ODCONE 000F2C  
                         _INLVLA 000F0D                           _INLVLB 000F15  
                         _INLVLC 000F1D                           _INLVLD 000F22  
                         _INLVLE 000F2A                           _OSCFRQ 000EDE  
               __end_of_lcd_puts 1104            __end_of_lcd_4bit_init 10CC  
                         isa$std 000001                   _PMD_Initialize 1138  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
              _SYSTEM_Initialize 11A8                       __accesstop 0060  
        __end_of__initialization 117E               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0001           __end_of_PMD_Initialize 1154  
          __size_of_lcd_2nd_line 000E               __size_of_lcd_clear 0012  
          __size_of_lcd_1st_line 000E               __size_of_lcd_write 00C4  
      __end_of_SYSTEM_Initialize 11B6                     _lcd_2nd_line 118C  
                ?_PMD_Initialize 0001                     _lcd_1st_line 119A  
                        _OSCCON1 000ED8                          _OSCCON3 000EDA  
                        _OSCTUNE 000EDD                          _SLRCONA 000F0E  
                        _SLRCONB 000F16                          _SLRCONC 000F1E  
                        _SLRCOND 000F23                          _SLRCONE 000F2B  
                      ?_lcd_puts 0002                          __Hparam 0000  
                        __Lparam 0000                __end_of_lcd_clear 117E  
              __end_of_lcd_write 0FEA                     __psmallconst 0F00  
                        __pcinit 117E                          __ramtop 0F00  
                        __ptext0 1104                          __ptext1 10CC  
                        __ptext2 106A                          __ptext3 116C  
                        __ptext4 118C                          __ptext5 119A  
                        __ptext6 0F26                          __ptext7 11A8  
                        __ptext8 1138                          __ptext9 0FEA  
          _OSCILLATOR_Initialize 1154         ??_PIN_MANAGER_Initialize 0001  
     __size_of_SYSTEM_Initialize 000E                       ??_lcd_puts 0004  
           end_of_initialization 117E                       lcd_write@c 0001  
                lcd_2nd_line@pos 0002           ?_OSCILLATOR_Initialize 0001  
            start_initialization 117E  __size_of_PIN_MANAGER_Initialize 0080  
         __size_of_lcd_4bit_init 0062                 ??_PMD_Initialize 0001  
              __size_of_lcd_puts 0038           _PIN_MANAGER_Initialize 0FEA  
                  _lcd_4bit_init 106A                        _lcd_clear 116C  
                      _lcd_write 0F26                      __smallconst 0F00  
                       _LATDbits 000F86                         _LATEbits 000F87  
                lcd_1st_line@pos 0002                   ?_lcd_4bit_init 0001  
                     ?_lcd_clear 0001                       ?_lcd_write 0001  
                      lcd_puts@s 0002                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0F00  
        ??_OSCILLATOR_Initialize 0001                         __ptext10 1154  
                       _lcd_puts 10CC                    __size_of_main 0034  
                ??_lcd_4bit_init 0002                         isa$xinst 000000  
                  ?_lcd_2nd_line 0001                      ??_lcd_clear 0002  
                  ?_lcd_1st_line 0001                      ??_lcd_write 0001  
        ?_PIN_MANAGER_Initialize 0001                   ??_lcd_2nd_line 0002  
                 ??_lcd_1st_line 0002   __end_of_PIN_MANAGER_Initialize 106A  



Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 01 17:11:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 21/07/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F47K40 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     _INLVLD	set	3874
    58   000000                     _SLRCOND	set	3875
    59   000000                     _ODCOND	set	3876
    60   000000                     _WPUD	set	3877
    61   000000                     _TRISD	set	3979
    62   000000                     _TRISC	set	3978
    63   000000                     _TRISB	set	3977
    64   000000                     _TRISA	set	3976
    65   000000                     _TRISE	set	3980
    66   000000                     _LATC	set	3973
    67   000000                     _LATB	set	3972
    68   000000                     _OSCTUNE	set	3805
    69   000000                     _OSCFRQ	set	3806
    70   000000                     _LATEbits	set	3975
    71   000000                     _LATDbits	set	3974
    72   000000                     _OSCCON1	set	3800
    73   000000                     _OSCCON3	set	3802
    74   000000                     _OSCEN	set	3804
    75   000000                     _PMD0	set	3809
    76   000000                     _INLVLA	set	3853
    77   000000                     _SLRCONA	set	3854
    78   000000                     _ODCONA	set	3855
    79   000000                     _WPUA	set	3856
    80   000000                     _ANSELA	set	3857
    81   000000                     _ANSELB	set	3865
    82   000000                     _ANSELC	set	3873
    83   000000                     _ANSELD	set	3878
    84   000000                     _LATA	set	3971
    85   000000                     _LATD	set	3974
    86   000000                     _LATE	set	3975
    87   000000                     _PMD5	set	3814
    88   000000                     _PMD4	set	3813
    89   000000                     _PMD3	set	3812
    90   000000                     _PMD2	set	3811
    91   000000                     _PMD1	set	3810
    92   000000                     _INLVLE	set	3882
    93   000000                     _SLRCONE	set	3883
    94   000000                     _ODCONE	set	3884
    95   000000                     _WPUE	set	3885
    96   000000                     _ANSELE	set	3886
    97   000000                     _INLVLC	set	3869
    98   000000                     _SLRCONC	set	3870
    99   000000                     _ODCONC	set	3871
   100   000000                     _WPUC	set	3872
   101   000000                     _INLVLB	set	3861
   102   000000                     _SLRCONB	set	3862
   103   000000                     _ODCONB	set	3863
   104   000000                     _WPUB	set	3864
   105                           
   106                           	psect	smallconst
   107   000F00                     __psmallconst:
   108                           	callstack 0
   109   000F00  00                 	db	0
   110   000F01                     STR_2:
   111                           
   112                           ; BSR set to: 14
   113   000F01  49                 	db	73	;'I'
   114   000F02  72                 	db	114	;'r'
   115   000F03  72                 	db	114	;'r'
   116   000F04  69                 	db	105	;'i'
   117   000F05  67                 	db	103	;'g'
   118   000F06  61                 	db	97	;'a'
   119   000F07  74                 	db	116	;'t'
   120   000F08  69                 	db	105	;'i'
   121   000F09  6F                 	db	111	;'o'
   122   000F0A  6E                 	db	110	;'n'
   123   000F0B  20                 	db	32
   124   000F0C  53                 	db	83	;'S'
   125   000F0D  79                 	db	121	;'y'
   126   000F0E  73                 	db	115	;'s'
   127   000F0F  74                 	db	116	;'t'
   128   000F10  65                 	db	101	;'e'
   129   000F11  6D                 	db	109	;'m'
   130   000F12  20                 	db	32
   131   000F13  50                 	db	80	;'P'
   132   000F14  72                 	db	114	;'r'
   133   000F15  6F                 	db	111	;'o'
   134   000F16  6A                 	db	106	;'j'
   135   000F17  65                 	db	101	;'e'
   136   000F18  63                 	db	99	;'c'
   137   000F19  74                 	db	116	;'t'
   138   000F1A  00                 	db	0
   139   000F1B                     STR_1:
   140                           
   141                           ; BSR set to: 14
   142   000F1B  45                 	db	69	;'E'
   143   000F1C  6D                 	db	109	;'m'
   144   000F1D  62                 	db	98	;'b'
   145   000F1E  65                 	db	101	;'e'
   146   000F1F  64                 	db	100	;'d'
   147   000F20  44                 	db	68	;'D'
   148   000F21  4E                 	db	78	;'N'
   149   000F22  41                 	db	65	;'A'
   150   000F23  00                 	db	0
   151   000F24  00                 	db	0	; dummy byte at the end
   152   000000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   00117E                     __pcinit:
   157                           	callstack 0
   158   00117E                     start_initialization:
   159                           	callstack 0
   160   00117E                     __initialization:
   161                           	callstack 0
   162   00117E                     end_of_initialization:
   163                           	callstack 0
   164   00117E                     __end_of__initialization:
   165                           	callstack 0
   166   00117E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   167   001180  6EF8               	movwf	tblptru,c
   168   001182  0E0F               	movlw	high __Lsmallconst
   169   001184  6EF7               	movwf	tblptrh,c
   170   001186  0100               	movlb	0
   171   001188  EF82  F008         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	cstackCOMRAM
   174   000001                     __pcstackCOMRAM:
   175                           	callstack 0
   176   000001                     lcd_write@c:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x0
   180   000001                     	ds	1
   181   000002                     ??_lcd_4bit_init:
   182   000002                     lcd_1st_line@pos:
   183                           	callstack 0
   184   000002                     lcd_2nd_line@pos:
   185                           	callstack 0
   186   000002                     lcd_puts@s:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x1
   190   000002                     	ds	2
   191   000004                     
   192                           ; 1 bytes @ 0x3
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 49 in file "Irrigation_System.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels required when called: 3
   218 ;; This function calls:
   219 ;;		_SYSTEM_Initialize
   220 ;;		_lcd_1st_line
   221 ;;		_lcd_2nd_line
   222 ;;		_lcd_4bit_init
   223 ;;		_lcd_puts
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text0
   230   001104                     __ptext0:
   231                           	callstack 0
   232   001104                     _main:
   233                           	callstack 28
   234   001104                     
   235                           ;Irrigation_System.c: 52:     SYSTEM_Initialize();
   236   001104  ECD4  F008         	call	_SYSTEM_Initialize	;wreg free
   237   001108                     
   238                           ;Irrigation_System.c: 53:     lcd_4bit_init();
   239   001108  EC35  F008         	call	_lcd_4bit_init	;wreg free
   240   00110C                     
   241                           ;Irrigation_System.c: 69:     lcd_1st_line(0);
   242   00110C  0E00               	movlw	0
   243   00110E  ECCD  F008         	call	_lcd_1st_line
   244   001112                     
   245                           ;Irrigation_System.c: 70:     lcd_puts("EmbedDNA");
   246   001112  0E1B               	movlw	low STR_1
   247   001114  6E02               	movwf	lcd_puts@s^0,c
   248   001116  0E0F               	movlw	high STR_1
   249   001118  6E03               	movwf	(lcd_puts@s+1)^0,c
   250   00111A  EC66  F008         	call	_lcd_puts	;wreg free
   251   00111E                     
   252                           ;Irrigation_System.c: 71:     lcd_2nd_line(0);
   253   00111E  0E00               	movlw	0
   254   001120  ECC6  F008         	call	_lcd_2nd_line
   255   001124                     
   256                           ;Irrigation_System.c: 72:     lcd_puts("Irrigation System Project");
   257   001124  0E01               	movlw	low STR_2
   258   001126  6E02               	movwf	lcd_puts@s^0,c
   259   001128  0E0F               	movlw	high STR_2
   260   00112A  6E03               	movwf	(lcd_puts@s+1)^0,c
   261   00112C  EC66  F008         	call	_lcd_puts	;wreg free
   262   001130                     l174:
   263   001130  EF98  F008         	goto	l174
   264   001134  EF00  F000         	goto	start
   265   001138                     __end_of_main:
   266                           	callstack 0
   267                           
   268 ;; *************** function _lcd_puts *****************
   269 ;; Defined at:
   270 ;;		line 80 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;  s               2    1[COMRAM] PTR const unsigned char 
   273 ;;		 -> STR_2(26), STR_1(9), 
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;Total ram usage:        2 bytes
   290 ;; Hardware stack levels used: 1
   291 ;; Hardware stack levels required when called: 1
   292 ;; This function calls:
   293 ;;		_lcd_write
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text1
   300   0010CC                     __ptext1:
   301                           	callstack 0
   302   0010CC                     _lcd_puts:
   303                           	callstack 29
   304   0010CC                     
   305                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 80: void lcd_puts(const char * s);PICsim_Ma
      +                          nual_Add_Files/LCD/src/LCD_4Bit.c: 81: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 82:
      +                            LATEbits.LE2 = 1;
   306   0010CC  8487               	bsf	135,2,c	;volatile
   307                           
   308                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 83:  while(*s)
   309   0010CE  EF73  F008         	goto	l999
   310   0010D2                     l995:
   311                           
   312                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 84:   lcd_write(*s++);
   313   0010D2  C002  FFF6         	movff	lcd_puts@s,tblptrl
   314   0010D6  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
   315   0010DA                     	if	0	;tblptru may be non-zero
   316   0010DA                     	endif
   317   0010DA                     	if	0	;tblptru may be non-zero
   318   0010DA                     	endif
   319   0010DA  0008               	tblrd		*
   320   0010DC  50F5               	movf	tablat,w,c
   321   0010DE  EC93  F007         	call	_lcd_write
   322   0010E2  4A02               	infsnz	lcd_puts@s^0,f,c
   323   0010E4  2A03               	incf	(lcd_puts@s+1)^0,f,c
   324   0010E6                     l999:
   325                           
   326                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 83:  while(*s)
   327   0010E6  C002  FFF6         	movff	lcd_puts@s,tblptrl
   328   0010EA  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
   329   0010EE                     	if	0	;tblptru may be non-zero
   330   0010EE                     	endif
   331   0010EE                     	if	0	;tblptru may be non-zero
   332   0010EE                     	endif
   333   0010EE  0008               	tblrd		*
   334   0010F0  50F5               	movf	tablat,w,c
   335   0010F2  0900               	iorlw	0
   336   0010F4  A4D8               	btfss	status,2,c
   337   0010F6  EF7F  F008         	goto	u101
   338   0010FA  EF81  F008         	goto	u100
   339   0010FE                     u101:
   340   0010FE  EF69  F008         	goto	l995
   341   001102                     u100:
   342   001102  0012               	return		;funcret
   343   001104                     __end_of_lcd_puts:
   344                           	callstack 0
   345                           
   346 ;; *************** function _lcd_4bit_init *****************
   347 ;; Defined at:
   348 ;;		line 129 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   366 ;;Total ram usage:        1 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; Hardware stack levels required when called: 2
   369 ;; This function calls:
   370 ;;		_lcd_clear
   371 ;;		_lcd_write
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text2
   378   00106A                     __ptext2:
   379                           	callstack 0
   380   00106A                     _lcd_4bit_init:
   381                           	callstack 28
   382   00106A                     
   383                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 131:  LATEbits.LE2 = 0;
   384   00106A  9487               	bcf	135,2,c	;volatile
   385                           
   386                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 132:  LATEbits.LE1 = 0;
   387   00106C  9287               	bcf	135,1,c	;volatile
   388   00106E                     
   389                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 135:     _delay((unsigned long)((15)*(10000
      +                          00/4000.0)));
   390   00106E  0E05               	movlw	5
   391   001070  6E02               	movwf	??_lcd_4bit_init^0,c
   392   001072  0EDE               	movlw	222
   393   001074                     u117:
   394   001074  2EE8               	decfsz	wreg,f,c
   395   001076  D7FE               	bra	u117
   396   001078  2E02               	decfsz	??_lcd_4bit_init^0,f,c
   397   00107A  D7FC               	bra	u117
   398   00107C                     
   399                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 136:  LATDbits.LD4 = 1;
   400   00107C  8886               	bsf	134,4,c	;volatile
   401   00107E                     
   402                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 137:  LATDbits.LD5 = 1;
   403   00107E  8A86               	bsf	134,5,c	;volatile
   404   001080                     
   405                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 138:  LATDbits.LD6 = 0;
   406   001080  9C86               	bcf	134,6,c	;volatile
   407   001082                     
   408                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 139:  LATDbits.LD7 = 0;
   409   001082  9E86               	bcf	134,7,c	;volatile
   410   001084                     
   411                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 141:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   412   001084  8287               	bsf	135,1,c	;volatile
   413   001086  9287               	bcf	135,1,c	;volatile
   414                           
   415                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 142:  _delay((unsigned long)((5)*(1000000/4
      +                          000.0)));
   416   001088  0EFA               	movlw	250
   417   00108A                     u127:
   418   00108A  D000               	nop2	
   419   00108C  2EE8               	decfsz	wreg,f,c
   420   00108E  D7FD               	bra	u127
   421   001090                     
   422                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 143:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   423   001090  8287               	bsf	135,1,c	;volatile
   424   001092  9287               	bcf	135,1,c	;volatile
   425                           
   426                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 144:  _delay((unsigned long)((200)*(1000000
      +                          /4000000.0)));
   427   001094  0E10               	movlw	16
   428   001096                     u137:
   429   001096  2EE8               	decfsz	wreg,f,c
   430   001098  D7FE               	bra	u137
   431   00109A  D000               	nop2	
   432   00109C                     
   433                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 145:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   434   00109C  8287               	bsf	135,1,c	;volatile
   435   00109E  9287               	bcf	135,1,c	;volatile
   436                           
   437                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 146:  _delay((unsigned long)((200)*(1000000
      +                          /4000000.0)));
   438   0010A0  0E10               	movlw	16
   439   0010A2                     u147:
   440   0010A2  2EE8               	decfsz	wreg,f,c
   441   0010A4  D7FE               	bra	u147
   442   0010A6  D000               	nop2	
   443   0010A8                     
   444                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 148:  LATDbits.LD4 = 0;
   445   0010A8  9886               	bcf	134,4,c	;volatile
   446   0010AA                     
   447                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 149:  LATDbits.LD5 = 1;
   448   0010AA  8A86               	bsf	134,5,c	;volatile
   449   0010AC                     
   450                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 150:  LATDbits.LD6 = 0;
   451   0010AC  9C86               	bcf	134,6,c	;volatile
   452   0010AE                     
   453                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 151:  LATDbits.LD7 = 0;
   454   0010AE  9E86               	bcf	134,7,c	;volatile
   455   0010B0                     
   456                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 152:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0))
      +                          ;
   457   0010B0  8287               	bsf	135,1,c	;volatile
   458   0010B2  9287               	bcf	135,1,c	;volatile
   459   0010B4                     
   460                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 154:  lcd_write(0x28);
   461   0010B4  0E28               	movlw	40
   462   0010B6  EC93  F007         	call	_lcd_write
   463   0010BA                     
   464                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 155:  lcd_write(0x0E);
   465   0010BA  0E0E               	movlw	14
   466   0010BC  EC93  F007         	call	_lcd_write
   467   0010C0                     
   468                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 156:  lcd_clear();
   469   0010C0  ECB6  F008         	call	_lcd_clear	;wreg free
   470   0010C4                     
   471                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 157:  lcd_write(0x06);
   472   0010C4  0E06               	movlw	6
   473   0010C6  EC93  F007         	call	_lcd_write
   474   0010CA  0012               	return		;funcret
   475   0010CC                     __end_of_lcd_4bit_init:
   476                           	callstack 0
   477                           
   478 ;; *************** function _lcd_clear *****************
   479 ;; Defined at:
   480 ;;		line 70 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 1
   501 ;; This function calls:
   502 ;;		_lcd_write
   503 ;; This function is called by:
   504 ;;		_lcd_4bit_init
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text3
   509   00116C                     __ptext3:
   510                           	callstack 0
   511   00116C                     _lcd_clear:
   512                           	callstack 28
   513   00116C                     
   514                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 72:  LATEbits.LE2 = 0;
   515   00116C  9487               	bcf	135,2,c	;volatile
   516   00116E                     
   517                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 73:  lcd_write(0x1);
   518   00116E  0E01               	movlw	1
   519   001170  EC93  F007         	call	_lcd_write
   520   001174                     
   521                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 74:  _delay((unsigned long)((2)*(1000000/40
      +                          00.0)));
   522   001174  0EA6               	movlw	166
   523   001176                     u157:
   524   001176  2EE8               	decfsz	wreg,f,c
   525   001178  D7FE               	bra	u157
   526   00117A  D000               	nop2	
   527   00117C  0012               	return		;funcret
   528   00117E                     __end_of_lcd_clear:
   529                           	callstack 0
   530                           
   531 ;; *************** function _lcd_2nd_line *****************
   532 ;; Defined at:
   533 ;;		line 102 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  pos             1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  pos             1    1[COMRAM] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 1
   554 ;; This function calls:
   555 ;;		_lcd_write
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text4
   562   00118C                     __ptext4:
   563                           	callstack 0
   564   00118C                     _lcd_2nd_line:
   565                           	callstack 29
   566                           
   567                           ;incstack = 0
   568                           ;lcd_2nd_line@pos stored from wreg
   569   00118C  6E02               	movwf	lcd_2nd_line@pos^0,c
   570   00118E                     
   571                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 102: void lcd_2nd_line(unsigned char pos);P
      +                          ICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 103: {;PICsim_Manual_Add_Files/LCD/src/LCD_4B
      +                          it.c: 104:  LATEbits.LE2 = 0;
   572   00118E  9487               	bcf	135,2,c	;volatile
   573   001190                     
   574                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 108:  lcd_write(0xC0+pos);
   575   001190  5002               	movf	lcd_2nd_line@pos^0,w,c
   576   001192  0FC0               	addlw	192
   577   001194  EC93  F007         	call	_lcd_write
   578   001198  0012               	return		;funcret
   579   00119A                     __end_of_lcd_2nd_line:
   580                           	callstack 0
   581                           
   582 ;; *************** function _lcd_1st_line *****************
   583 ;; Defined at:
   584 ;;		line 92 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  pos             1    wreg     unsigned char 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  pos             1    1[COMRAM] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;Total ram usage:        1 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 1
   605 ;; This function calls:
   606 ;;		_lcd_write
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text5
   613   00119A                     __ptext5:
   614                           	callstack 0
   615   00119A                     _lcd_1st_line:
   616                           	callstack 29
   617                           
   618                           ;incstack = 0
   619                           ;lcd_1st_line@pos stored from wreg
   620   00119A  6E02               	movwf	lcd_1st_line@pos^0,c
   621   00119C                     
   622                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 92: void lcd_1st_line(unsigned char pos);PI
      +                          Csim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 93: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit
      +                          .c: 94:  LATEbits.LE2 = 0;
   623   00119C  9487               	bcf	135,2,c	;volatile
   624   00119E                     
   625                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 98:  lcd_write(0x80+pos);
   626   00119E  5002               	movf	lcd_1st_line@pos^0,w,c
   627   0011A0  0F80               	addlw	128
   628   0011A2  EC93  F007         	call	_lcd_write
   629   0011A6  0012               	return		;funcret
   630   0011A8                     __end_of_lcd_1st_line:
   631                           	callstack 0
   632                           
   633 ;; *************** function _lcd_write *****************
   634 ;; Defined at:
   635 ;;		line 10 in file "PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  c               1    wreg     unsigned char 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  c               1    0[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_lcd_clear
   659 ;;		_lcd_puts
   660 ;;		_lcd_1st_line
   661 ;;		_lcd_2nd_line
   662 ;;		_lcd_4bit_init
   663 ;;		_lcd_putch
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text6
   668   000F26                     __ptext6:
   669                           	callstack 0
   670   000F26                     _lcd_write:
   671                           	callstack 29
   672                           
   673                           ;incstack = 0
   674                           ;lcd_write@c stored from wreg
   675   000F26  6E01               	movwf	lcd_write@c^0,c
   676   000F28                     
   677                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 10: void lcd_write(unsigned char c);PICsim_
      +                          Manual_Add_Files/LCD/src/LCD_4Bit.c: 11: {;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 1
      +                          2:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   678   000F28  0E03               	movlw	3
   679   000F2A                     u167:
   680   000F2A  2EE8               	decfsz	wreg,f,c
   681   000F2C  D7FE               	bra	u167
   682   000F2E  F000               	nop	
   683   000F30                     
   684                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 13:  if(c & 0x10)
   685   000F30  A801               	btfss	lcd_write@c^0,4,c
   686   000F32  EF9D  F007         	goto	u11
   687   000F36  EF9F  F007         	goto	u10
   688   000F3A                     u11:
   689   000F3A  EFA2  F007         	goto	l122
   690   000F3E                     u10:
   691   000F3E                     
   692                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 14:         LATDbits.LD4 = 1;
   693   000F3E  8886               	bsf	134,4,c	;volatile
   694   000F40  EFA3  F007         	goto	l859
   695   000F44                     l122:
   696                           
   697                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 16:         LATDbits.LD4 = 0;
   698   000F44  9886               	bcf	134,4,c	;volatile
   699   000F46                     l859:
   700                           
   701                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 18:  if(c & 0x20)
   702   000F46  AA01               	btfss	lcd_write@c^0,5,c
   703   000F48  EFA8  F007         	goto	u21
   704   000F4C  EFAA  F007         	goto	u20
   705   000F50                     u21:
   706   000F50  EFAD  F007         	goto	l124
   707   000F54                     u20:
   708   000F54                     
   709                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 19:         LATDbits.LD5 = 1;
   710   000F54  8A86               	bsf	134,5,c	;volatile
   711   000F56  EFAE  F007         	goto	l863
   712   000F5A                     l124:
   713                           
   714                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 21:         LATDbits.LD5 = 0;
   715   000F5A  9A86               	bcf	134,5,c	;volatile
   716   000F5C                     l863:
   717                           
   718                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 23:  if(c & 0x40)
   719   000F5C  AC01               	btfss	lcd_write@c^0,6,c
   720   000F5E  EFB3  F007         	goto	u31
   721   000F62  EFB5  F007         	goto	u30
   722   000F66                     u31:
   723   000F66  EFB8  F007         	goto	l126
   724   000F6A                     u30:
   725   000F6A                     
   726                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 24:         LATDbits.LD6 = 1;
   727   000F6A  8C86               	bsf	134,6,c	;volatile
   728   000F6C  EFB9  F007         	goto	l867
   729   000F70                     l126:
   730                           
   731                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 26:         LATDbits.LD6 = 0;
   732   000F70  9C86               	bcf	134,6,c	;volatile
   733   000F72                     l867:
   734                           
   735                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 28:  if(c & 0x80)
   736   000F72  AE01               	btfss	lcd_write@c^0,7,c
   737   000F74  EFBE  F007         	goto	u41
   738   000F78  EFC0  F007         	goto	u40
   739   000F7C                     u41:
   740   000F7C  EFC3  F007         	goto	l128
   741   000F80                     u40:
   742   000F80                     
   743                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 29:         LATDbits.LD7 = 1;
   744   000F80  8E86               	bsf	134,7,c	;volatile
   745   000F82  EFC4  F007         	goto	l129
   746   000F86                     l128:
   747                           
   748                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 31:         LATDbits.LD7 = 0;
   749   000F86  9E86               	bcf	134,7,c	;volatile
   750   000F88                     l129:
   751                           
   752                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 34:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0));
   753   000F88  8287               	bsf	135,1,c	;volatile
   754   000F8A  9287               	bcf	135,1,c	;volatile
   755   000F8C                     
   756                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 36:  if(c & 0x01)
   757   000F8C  A001               	btfss	lcd_write@c^0,0,c
   758   000F8E  EFCB  F007         	goto	u51
   759   000F92  EFCD  F007         	goto	u50
   760   000F96                     u51:
   761   000F96  EFD0  F007         	goto	l130
   762   000F9A                     u50:
   763   000F9A                     
   764                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 37:         LATDbits.LD4 = 1;
   765   000F9A  8886               	bsf	134,4,c	;volatile
   766   000F9C  EFD1  F007         	goto	l875
   767   000FA0                     l130:
   768                           
   769                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 39:         LATDbits.LD4 = 0;
   770   000FA0  9886               	bcf	134,4,c	;volatile
   771   000FA2                     l875:
   772                           
   773                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 41:  if(c & 0x02)
   774   000FA2  A201               	btfss	lcd_write@c^0,1,c
   775   000FA4  EFD6  F007         	goto	u61
   776   000FA8  EFD8  F007         	goto	u60
   777   000FAC                     u61:
   778   000FAC  EFDB  F007         	goto	l132
   779   000FB0                     u60:
   780   000FB0                     
   781                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 42:         LATDbits.LD5 = 1;
   782   000FB0  8A86               	bsf	134,5,c	;volatile
   783   000FB2  EFDC  F007         	goto	l879
   784   000FB6                     l132:
   785                           
   786                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 44:         LATDbits.LD5 = 0;
   787   000FB6  9A86               	bcf	134,5,c	;volatile
   788   000FB8                     l879:
   789                           
   790                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 46:  if(c & 0x04)
   791   000FB8  A401               	btfss	lcd_write@c^0,2,c
   792   000FBA  EFE1  F007         	goto	u71
   793   000FBE  EFE3  F007         	goto	u70
   794   000FC2                     u71:
   795   000FC2  EFE6  F007         	goto	l134
   796   000FC6                     u70:
   797   000FC6                     
   798                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 47:         LATDbits.LD6 = 1;
   799   000FC6  8C86               	bsf	134,6,c	;volatile
   800   000FC8  EFE7  F007         	goto	l883
   801   000FCC                     l134:
   802                           
   803                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 49:         LATDbits.LD6 = 0;
   804   000FCC  9C86               	bcf	134,6,c	;volatile
   805   000FCE                     l883:
   806                           
   807                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 51:  if(c & 0x08)
   808   000FCE  A601               	btfss	lcd_write@c^0,3,c
   809   000FD0  EFEC  F007         	goto	u81
   810   000FD4  EFEE  F007         	goto	u80
   811   000FD8                     u81:
   812   000FD8  EFF1  F007         	goto	l136
   813   000FDC                     u80:
   814   000FDC                     
   815                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 52:         LATDbits.LD7 = 1;
   816   000FDC  8E86               	bsf	134,7,c	;volatile
   817   000FDE  EFF2  F007         	goto	l137
   818   000FE2                     l136:
   819                           
   820                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 54:         LATDbits.LD7 = 0;
   821   000FE2  9E86               	bcf	134,7,c	;volatile
   822   000FE4                     l137:
   823                           
   824                           ;PICsim_Manual_Add_Files/LCD/src/LCD_4Bit.c: 57:  ((LATEbits.LE1 = 1),(LATEbits.LE1=0));
   825   000FE4  8287               	bsf	135,1,c	;volatile
   826   000FE6  9287               	bcf	135,1,c	;volatile
   827   000FE8  0012               	return		;funcret
   828   000FEA                     __end_of_lcd_write:
   829                           	callstack 0
   830                           
   831 ;; *************** function _SYSTEM_Initialize *****************
   832 ;; Defined at:
   833 ;;		line 50 in file "mcc_generated_files/mcc.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 1
   854 ;; This function calls:
   855 ;;		_OSCILLATOR_Initialize
   856 ;;		_PIN_MANAGER_Initialize
   857 ;;		_PMD_Initialize
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text7
   864   0011A8                     __ptext7:
   865                           	callstack 0
   866   0011A8                     _SYSTEM_Initialize:
   867                           	callstack 29
   868   0011A8                     
   869                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   870   0011A8  EC9C  F008         	call	_PMD_Initialize	;wreg free
   871                           
   872                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   873   0011AC  ECF5  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   874                           
   875                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   876   0011B0  ECAA  F008         	call	_OSCILLATOR_Initialize	;wreg free
   877   0011B4  0012               	return		;funcret
   878   0011B6                     __end_of_SYSTEM_Initialize:
   879                           	callstack 0
   880                           
   881 ;; *************** function _PMD_Initialize *****************
   882 ;; Defined at:
   883 ;;		line 71 in file "mcc_generated_files/mcc.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_SYSTEM_Initialize
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text8
   911   001138                     __ptext8:
   912                           	callstack 0
   913   001138                     _PMD_Initialize:
   914                           	callstack 29
   915   001138                     
   916                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
   917   001138  0E00               	movlw	0
   918   00113A  010E               	movlb	14	; () banked
   919   00113C  6FE1               	movwf	225,b	;volatile
   920                           
   921                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
   922   00113E  0E00               	movlw	0
   923   001140  6FE2               	movwf	226,b	;volatile
   924                           
   925                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
   926   001142  0E00               	movlw	0
   927   001144  6FE3               	movwf	227,b	;volatile
   928                           
   929                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
   930   001146  0E00               	movlw	0
   931   001148  6FE4               	movwf	228,b	;volatile
   932                           
   933                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
   934   00114A  0E00               	movlw	0
   935   00114C  6FE5               	movwf	229,b	;volatile
   936                           
   937                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
   938   00114E  0E00               	movlw	0
   939   001150  6FE6               	movwf	230,b	;volatile
   940   001152                     
   941                           ; BSR set to: 14
   942   001152  0012               	return		;funcret
   943   001154                     __end_of_PMD_Initialize:
   944                           	callstack 0
   945                           
   946 ;; *************** function _PIN_MANAGER_Initialize *****************
   947 ;; Defined at:
   948 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_SYSTEM_Initialize
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text9
   976   000FEA                     __ptext9:
   977                           	callstack 0
   978   000FEA                     _PIN_MANAGER_Initialize:
   979                           	callstack 29
   980   000FEA                     
   981                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   982   000FEA  0E00               	movlw	0
   983   000FEC  6E87               	movwf	135,c	;volatile
   984                           
   985                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   986   000FEE  0E00               	movlw	0
   987   000FF0  6E86               	movwf	134,c	;volatile
   988                           
   989                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   990   000FF2  0E00               	movlw	0
   991   000FF4  6E83               	movwf	131,c	;volatile
   992                           
   993                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   994   000FF6  0E00               	movlw	0
   995   000FF8  6E84               	movwf	132,c	;volatile
   996                           
   997                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   998   000FFA  0E00               	movlw	0
   999   000FFC  6E85               	movwf	133,c	;volatile
  1000                           
  1001                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
  1002   000FFE  0E00               	movlw	0
  1003   001000  6E8C               	movwf	140,c	;volatile
  1004                           
  1005                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  1006   001002  0E00               	movlw	0
  1007   001004  6E88               	movwf	136,c	;volatile
  1008                           
  1009                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  1010   001006  0E00               	movlw	0
  1011   001008  6E89               	movwf	137,c	;volatile
  1012                           
  1013                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x00;
  1014   00100A  0E00               	movlw	0
  1015   00100C  6E8A               	movwf	138,c	;volatile
  1016                           
  1017                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  1018   00100E  0E00               	movlw	0
  1019   001010  6E8B               	movwf	139,c	;volatile
  1020                           
  1021                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1022   001012  0E00               	movlw	0
  1023   001014  010F               	movlb	15	; () banked
  1024   001016  6F26               	movwf	38,b	;volatile
  1025                           
  1026                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  1027   001018  0E00               	movlw	0
  1028   00101A  6F21               	movwf	33,b	;volatile
  1029                           
  1030                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  1031   00101C  0E00               	movlw	0
  1032   00101E  6F19               	movwf	25,b	;volatile
  1033                           
  1034                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
  1035   001020  0E00               	movlw	0
  1036   001022  6F2E               	movwf	46,b	;volatile
  1037                           
  1038                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  1039   001024  0E00               	movlw	0
  1040   001026  6F11               	movwf	17,b	;volatile
  1041                           
  1042                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1043   001028  0E00               	movlw	0
  1044   00102A  6F25               	movwf	37,b	;volatile
  1045                           
  1046                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1047   00102C  0E00               	movlw	0
  1048   00102E  6F2D               	movwf	45,b	;volatile
  1049                           
  1050                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1051   001030  0E00               	movlw	0
  1052   001032  6F18               	movwf	24,b	;volatile
  1053                           
  1054                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1055   001034  0E00               	movlw	0
  1056   001036  6F10               	movwf	16,b	;volatile
  1057                           
  1058                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1059   001038  0E00               	movlw	0
  1060   00103A  6F20               	movwf	32,b	;volatile
  1061                           
  1062                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1063   00103C  0E00               	movlw	0
  1064   00103E  6F2C               	movwf	44,b	;volatile
  1065                           
  1066                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1067   001040  0E00               	movlw	0
  1068   001042  6F0F               	movwf	15,b	;volatile
  1069                           
  1070                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1071   001044  0E00               	movlw	0
  1072   001046  6F17               	movwf	23,b	;volatile
  1073                           
  1074                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1075   001048  0E00               	movlw	0
  1076   00104A  6F1F               	movwf	31,b	;volatile
  1077                           
  1078                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1079   00104C  0E00               	movlw	0
  1080   00104E  6F24               	movwf	36,b	;volatile
  1081   001050                     
  1082                           ; BSR set to: 15
  1083                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1084   001050  690E               	setf	14,b	;volatile
  1085   001052                     
  1086                           ; BSR set to: 15
  1087                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1088   001052  6916               	setf	22,b	;volatile
  1089   001054                     
  1090                           ; BSR set to: 15
  1091                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1092   001054  691E               	setf	30,b	;volatile
  1093   001056                     
  1094                           ; BSR set to: 15
  1095                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1096   001056  6923               	setf	35,b	;volatile
  1097                           
  1098                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1099   001058  0E07               	movlw	7
  1100   00105A  6F2B               	movwf	43,b	;volatile
  1101   00105C                     
  1102                           ; BSR set to: 15
  1103                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1104   00105C  690D               	setf	13,b	;volatile
  1105   00105E                     
  1106                           ; BSR set to: 15
  1107                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1108   00105E  6915               	setf	21,b	;volatile
  1109   001060                     
  1110                           ; BSR set to: 15
  1111                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1112   001060  691D               	setf	29,b	;volatile
  1113   001062                     
  1114                           ; BSR set to: 15
  1115                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1116   001062  6922               	setf	34,b	;volatile
  1117                           
  1118                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1119   001064  0E0F               	movlw	15
  1120   001066  6F2A               	movwf	42,b	;volatile
  1121   001068                     
  1122                           ; BSR set to: 15
  1123   001068  0012               	return		;funcret
  1124   00106A                     __end_of_PIN_MANAGER_Initialize:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _OSCILLATOR_Initialize *****************
  1128 ;; Defined at:
  1129 ;;		line 57 in file "mcc_generated_files/mcc.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_SYSTEM_Initialize
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text10
  1157   001154                     __ptext10:
  1158                           	callstack 0
  1159   001154                     _OSCILLATOR_Initialize:
  1160                           	callstack 29
  1161   001154                     
  1162                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x60;
  1163   001154  0E60               	movlw	96
  1164   001156  010E               	movlb	14	; () banked
  1165   001158  6FD8               	movwf	216,b	;volatile
  1166                           
  1167                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  1168   00115A  0E00               	movlw	0
  1169   00115C  6FDA               	movwf	218,b	;volatile
  1170                           
  1171                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  1172   00115E  0E00               	movlw	0
  1173   001160  6FDC               	movwf	220,b	;volatile
  1174                           
  1175                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x00;
  1176   001162  0E00               	movlw	0
  1177   001164  6FDE               	movwf	222,b	;volatile
  1178                           
  1179                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1180   001166  0E00               	movlw	0
  1181   001168  6FDD               	movwf	221,b	;volatile
  1182   00116A                     
  1183                           ; BSR set to: 14
  1184   00116A  0012               	return		;funcret
  1185   00116C                     __end_of_OSCILLATOR_Initialize:
  1186                           	callstack 0
  1187                           
  1188                           	psect	rparam
  1189   000000                     
  1190                           	psect	config
  1191                           
  1192                           ;Config register CONFIG1L @ 0x300000
  1193                           ;	External Oscillator mode Selection bits
  1194                           ;	FEXTOSC = OFF, Oscillator not enabled
  1195                           ;	Power-up default value for COSC bits
  1196                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1197   300000                     	org	3145728
  1198   300000  EC                 	db	236
  1199                           
  1200                           ;Config register CONFIG1H @ 0x300001
  1201                           ;	Clock Out Enable bit
  1202                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1203                           ;	Clock Switch Enable bit
  1204                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1205                           ;	Fail-Safe Clock Monitor Enable bit
  1206                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1207   300001                     	org	3145729
  1208   300001  FF                 	db	255
  1209                           
  1210                           ;Config register CONFIG2L @ 0x300002
  1211                           ;	Master Clear Enable bit
  1212                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1213                           ;	Power-up Timer Enable bit
  1214                           ;	PWRTE = OFF, Power up timer disabled
  1215                           ;	Low-power BOR enable bit
  1216                           ;	LPBOREN = OFF, ULPBOR disabled
  1217                           ;	Brown-out Reset Enable bits
  1218                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1219   300002                     	org	3145730
  1220   300002  FF                 	db	255
  1221                           
  1222                           ;Config register CONFIG2H @ 0x300003
  1223                           ;	Brown Out Reset Voltage selection bits
  1224                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1225                           ;	ZCD Disable bit
  1226                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1227                           ;	PPSLOCK bit One-Way Set Enable bit
  1228                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1229                           ;	Stack Full/Underflow Reset Enable bit
  1230                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1231                           ;	Debugger Enable bit
  1232                           ;	DEBUG = OFF, Background debugger disabled
  1233                           ;	Extended Instruction Set Enable bit
  1234                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1235   300003                     	org	3145731
  1236   300003  FF                 	db	255
  1237                           
  1238                           ;Config register CONFIG3L @ 0x300004
  1239                           ;	WDT Period Select bits
  1240                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1241                           ;	WDT operating mode
  1242                           ;	WDTE = OFF, WDT Disabled
  1243   300004                     	org	3145732
  1244   300004  9F                 	db	159
  1245                           
  1246                           ;Config register CONFIG3H @ 0x300005
  1247                           ;	WDT Window Select bits
  1248                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1249                           ;	WDT input clock selector
  1250                           ;	WDTCCS = SC, Software Control
  1251   300005                     	org	3145733
  1252   300005  FF                 	db	255
  1253                           
  1254                           ;Config register CONFIG4L @ 0x300006
  1255                           ;	Write Protection Block 0
  1256                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1257                           ;	Write Protection Block 1
  1258                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1259                           ;	Write Protection Block 2
  1260                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1261                           ;	Write Protection Block 3
  1262                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1263                           ;	Write Protection Block 3
  1264                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1265                           ;	Write Protection Block 3
  1266                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1267                           ;	Write Protection Block 3
  1268                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  1269                           ;	Write Protection Block 3
  1270                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1271   300006                     	org	3145734
  1272   300006  FF                 	db	255
  1273                           
  1274                           ;Config register CONFIG4H @ 0x300007
  1275                           ;	Configuration Register Write Protection bit
  1276                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  1277                           ;	Boot Block Write Protection bit
  1278                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1279                           ;	Data EEPROM Write Protection bit
  1280                           ;	WRTD = OFF, Data EEPROM not write-protected
  1281                           ;	Scanner Enable bit
  1282                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1283                           ;	Low Voltage Programming Enable bit
  1284                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1285   300007                     	org	3145735
  1286   300007  FF                 	db	255
  1287                           
  1288                           ;Config register CONFIG5L @ 0x300008
  1289                           ;	UserNVM Program Memory Code Protection bit
  1290                           ;	CP = OFF, UserNVM code protection disabled
  1291                           ;	DataNVM Memory Code Protection bit
  1292                           ;	CPD = OFF, DataNVM code protection disabled
  1293   300008                     	org	3145736
  1294   300008  FF                 	db	255
  1295                           
  1296                           ;Config register CONFIG5H @ 0x300009
  1297                           ;	unspecified, using default values
  1298   300009                     	org	3145737
  1299   300009  FF                 	db	255
  1300                           
  1301                           ;Config register CONFIG6L @ 0x30000A
  1302                           ;	Table Read Protection Block 0
  1303                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1304                           ;	Table Read Protection Block 1
  1305                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1306                           ;	Table Read Protection Block 2
  1307                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1308                           ;	Table Read Protection Block 3
  1309                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1310                           ;	Table Read Protection Block 4
  1311                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1312                           ;	Table Read Protection Block 5
  1313                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1314                           ;	Table Read Protection Block 6
  1315                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1316                           ;	Table Read Protection Block 7
  1317                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1318   30000A                     	org	3145738
  1319   30000A  FF                 	db	255
  1320                           
  1321                           ;Config register CONFIG6H @ 0x30000B
  1322                           ;	Boot Block Table Read Protection bit
  1323                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1324   30000B                     	org	3145739
  1325   30000B  FF                 	db	255
  1326                           tosu	equ	0xFFF
  1327                           tosh	equ	0xFFE
  1328                           tosl	equ	0xFFD
  1329                           stkptr	equ	0xFFC
  1330                           pclatu	equ	0xFFB
  1331                           pclath	equ	0xFFA
  1332                           pcl	equ	0xFF9
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           indf0	equ	0xFEF
  1340                           postinc0	equ	0xFEE
  1341                           postdec0	equ	0xFED
  1342                           preinc0	equ	0xFEC
  1343                           plusw0	equ	0xFEB
  1344                           fsr0h	equ	0xFEA
  1345                           fsr0l	equ	0xFE9
  1346                           wreg	equ	0xFE8
  1347                           indf1	equ	0xFE7
  1348                           postinc1	equ	0xFE6
  1349                           postdec1	equ	0xFE5
  1350                           preinc1	equ	0xFE4
  1351                           plusw1	equ	0xFE3
  1352                           fsr1h	equ	0xFE2
  1353                           fsr1l	equ	0xFE1
  1354                           bsr	equ	0xFE0
  1355                           indf2	equ	0xFDF
  1356                           postinc2	equ	0xFDE
  1357                           postdec2	equ	0xFDD
  1358                           preinc2	equ	0xFDC
  1359                           plusw2	equ	0xFDB
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_4bit_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_2nd_line->_lcd_write
    _lcd_1st_line->_lcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     827
                  _SYSTEM_Initialize
                       _lcd_1st_line
                       _lcd_2nd_line
                      _lcd_4bit_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     317
                                              1 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_init                                        1     1      0     240
                                              1 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     120
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_2nd_line                                         1     1      0     135
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_1st_line                                         1     1      0     135
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _lcd_1st_line
     _lcd_write
   _lcd_2nd_line
     _lcd_write
   _lcd_4bit_init
     _lcd_clear
       _lcd_write
     _lcd_write
   _lcd_puts
     _lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITBIGSFRhhhhhh     73      0       0      34        0.0%
BITBIGSFRhhhhhl     54      0       0      35        0.0%
BITBIGSFRhhhhhl      3      0       0      36        0.0%
BITBIGSFRhhhhhl      3      0       0      37        0.0%
BITBIGSFRhhhhhl      3      0       0      38        0.0%
BITBIGSFRhhhhhl     26      0       0      39        0.0%
BITBIGSFRhhhhl       2      0       0      40        0.0%
BITBIGSFRhhl         1      0       0      41        0.0%
BITBIGSFRhl          1      0       0      42        0.0%
BITBIGSFRl          4B      0       0      43        0.0%
ABS                  0      0       0      44        0.0%
BIGRAM             E87      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 01 17:11:34 2023

                            l31 11B4                              l34 116A                              l37 1152  
                            u10 0F3E                              u11 0F3A                              u20 0F54  
                            u21 0F50                              u30 0F6A                              u31 0F66  
                            u40 0F80                              u41 0F7C                              u50 0F9A  
                            u51 0F96                              u60 0FB0                              u61 0FAC  
                            u70 0FC6                              u71 0FC2                              u80 0FDC  
                            u81 0FD8                             l110 1068                             l130 0FA0  
                           l122 0F44                             l132 0FB6                             l124 0F5A  
                           l134 0FCC                             l126 0F70                             l150 1102  
                           l136 0FE2                             l128 0F86                             l144 117C  
                           l137 0FE4                             l129 0F88                             l153 11A6  
                           l138 0FE8                             l156 1198                             l174 1130  
                           l159 10CA                             l175 1130                             l901 105E  
                           l903 1060                             l911 116E                             l905 1062  
                           l913 1174                             l907 1154                             l915 11A8  
                           l931 1190                             l861 0F54                             l853 0F28  
                           l925 119C                             l909 116C                             l941 1080  
                           l933 106A                             l871 0F8C                             l863 0F5C  
                           l855 0F30                             l927 119E                             l951 1092  
                           l943 1082                             l935 106E                             l881 0FC6  
                           l873 0F9A                             l865 0F6A                             l857 0F3E  
                           l929 118E                             l961 10AC                             l953 109C  
                           l945 1084                             l937 107C                             l891 1050  
                           l883 0FCE                             l875 0FA2                             l867 0F72  
                           l859 0F46                             l971 10BA                             l963 10AE  
                           l955 109E                             l947 1086                             l939 107E  
                           l893 1052                             l885 0FDC                             l877 0FB0  
                           l869 0F80                             l973 10C0                             l965 10B0  
                           l957 10A8                             l949 1090                             l895 1054  
                           l887 1138                             l879 0FB8                             l975 10C4  
                           l967 10B2                             l959 10AA                             l897 1056  
                           l889 0FEA                             l969 10B4                             l993 10CC  
                           l899 105C                             l995 10D2                             l997 10E2  
                           l999 10E6                             u100 1102                             u101 10FE  
                           u117 1074                             u127 108A                             u137 1096  
                           u147 10A2                             u157 1176                             u167 0F2A  
                           wreg 0FE8                            l1001 1104                            l1011 1124  
                          l1003 1108                            l1005 110C                            l1007 1112  
                          l1009 111E                            STR_1 0F1B                            STR_2 0F01  
                          _LATA 0F83                            _LATB 0F84                            _LATC 0F85  
                          _LATD 0F86                            _LATE 0F87                            _PMD0 0EE1  
                          _PMD1 0EE2                            _PMD2 0EE3                            _PMD3 0EE4  
                          _PMD4 0EE5                            _PMD5 0EE6                            _WPUA 0F10  
                          _WPUB 0F18                            _WPUC 0F20                            _WPUD 0F25  
                          _WPUE 0F2D                            _main 1104                            start 0000  
                  ___param_bank 0000   __end_of_OSCILLATOR_Initialize 116C                           ?_main 0001  
                         _OSCEN 0EDC                           _TRISA 0F88                           _TRISB 0F89  
                         _TRISC 0F8A                           _TRISD 0F8B                           _TRISE 0F8C  
          __end_of_lcd_2nd_line 119A                           tablat 0FF5            __end_of_lcd_1st_line 11A8  
                         status 0FD8                 __initialization 117E                    __end_of_main 1138  
                        ??_main 0004                   __activetblptr 0001                          _ANSELA 0F11  
                        _ANSELB 0F19                          _ANSELC 0F21                          _ANSELD 0F26  
                        _ANSELE 0F2E                          _ODCONA 0F0F                          _ODCONB 0F17  
                        _ODCONC 0F1F                          _ODCOND 0F24                          _ODCONE 0F2C  
                        _INLVLA 0F0D                          _INLVLB 0F15                          _INLVLC 0F1D  
                        _INLVLD 0F22                          _INLVLE 0F2A                          _OSCFRQ 0EDE  
              __end_of_lcd_puts 1104           __end_of_lcd_4bit_init 10CC                          isa$std 0001  
                _PMD_Initialize 1138                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8               _SYSTEM_Initialize 11A8  
                    __accesstop 0060         __end_of__initialization 117E              ?_SYSTEM_Initialize 0001  
                 ___rparam_used 0001                  __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001  
        __end_of_PMD_Initialize 1154       __end_of_SYSTEM_Initialize 11B6                    _lcd_2nd_line 118C  
               ?_PMD_Initialize 0001                    _lcd_1st_line 119A                         _OSCCON1 0ED8  
                       _OSCCON3 0EDA                         _OSCTUNE 0EDD                         _SLRCONA 0F0E  
                       _SLRCONB 0F16                         _SLRCONC 0F1E                         _SLRCOND 0F23  
                       _SLRCONE 0F2B                       ?_lcd_puts 0002                         __Hparam 0000  
                       __Lparam 0000               __end_of_lcd_clear 117E               __end_of_lcd_write 0FEA  
                  __psmallconst 0F00                         __pcinit 117E                         __ramtop 0F00  
                       __ptext0 1104                         __ptext1 10CC                         __ptext2 106A  
                       __ptext3 116C                         __ptext4 118C                         __ptext5 119A  
                       __ptext6 0F26                         __ptext7 11A8                         __ptext8 1138  
                       __ptext9 0FEA           _OSCILLATOR_Initialize 1154        ??_PIN_MANAGER_Initialize 0001  
                    ??_lcd_puts 0004            end_of_initialization 117E                      lcd_write@c 0001  
               lcd_2nd_line@pos 0002          ?_OSCILLATOR_Initialize 0001             start_initialization 117E  
              ??_PMD_Initialize 0001          _PIN_MANAGER_Initialize 0FEA                   _lcd_4bit_init 106A  
                     _lcd_clear 116C                       _lcd_write 0F26                     __smallconst 0F00  
                      _LATDbits 0F86                        _LATEbits 0F87                 lcd_1st_line@pos 0002  
                ?_lcd_4bit_init 0001                      ?_lcd_clear 0001                      ?_lcd_write 0001  
                     lcd_puts@s 0002                        __Hrparam 0000                        __Lrparam 0000  
                  __Lsmallconst 0F00         ??_OSCILLATOR_Initialize 0001                        __ptext10 1154  
                      _lcd_puts 10CC                 ??_lcd_4bit_init 0002                        isa$xinst 0000  
                 ?_lcd_2nd_line 0001                     ??_lcd_clear 0002                   ?_lcd_1st_line 0001  
                   ??_lcd_write 0001         ?_PIN_MANAGER_Initialize 0001                  ??_lcd_2nd_line 0002  
                ??_lcd_1st_line 0002  __end_of_PIN_MANAGER_Initialize 106A  
